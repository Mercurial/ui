name: RELEASE

on:
  release:
    types:
      - 'published'

jobs:
  build:
    name: Build Watcher
    permissions: write-all
    strategy:
      matrix:
        node-version: [18.x]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Current Branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup and System Dependencies
        run: | 
          sudo apt update
          sudo apt install libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            unzip

      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y

      - name: Install node Dependencies and yaml2json
        run: |
          npm ci
          npm run build --workspace packages/constants    
          npm run build --workspace packages/types    
          npm run build --workspace packages/utils    
          npm run build --workspace packages --if-present
          npm install -g yamljs

      - name: Fetch Latest Version of Contract
        id: Contract_latest_tag
        run: |
          pwd
          download_version=$(curl -s https://api.github.com/repos/rosen-bridge/contract/releases | jq -r 'max_by(.published_at).name')
          echo "::set-output name=latest_tag::$download_version"
          
      - name: Download Contracts Files
        run: |
          mkdir -p apps/watcher/src-tauri/config/rosen/
          cd apps/watcher/src-tauri/config/rosen
          release_info=$(curl -s "https://api.github.com/repos/rosen-bridge/contract/releases/tags/${{ steps.Contract_latest_tag.outputs.latest_tag }}")
          asset_urls=$(echo "$release_info" | jq -r --arg name "${{ secrets.RELEASE_NAME }}" '.assets | map(select(.name | test($name))) | .[].browser_download_url')
          for url in $asset_urls; do
            curl -LJO "$url"
          done

      - name: Download Watcher Files
        run: |
          mkdir -p ./apps/watcher/src-tauri/.bin/tmp
          cd ./apps/watcher/src-tauri/.bin/tmp
          curl -s https://api.github.com/repos/rosen-bridge/watcher/releases/latest | grep "browser_download_url" | cut -d '"' -f 4 | wget -qi-
          curl -s https://api.github.com/repos/rosen-bridge/watcher/releases/latest | grep "zipball_url" | cut -d '"' -f 4 | wget -qi-

      - name: Move the Files
        run: |
          cd ./apps/watcher/src-tauri/config/rosen/
          mv ./tokensMap-${{ secrets.RELEASE_NAME }}-${{ steps.Contract_latest_tag.outputs.latest_tag }}.json ./tokens.json
          files=$(ls contracts-*-${{ secrets.RELEASE_NAME }}-${{ steps.Contract_latest_tag.outputs.latest_tag }}.json)
          for file in $files; do
            new_name=$(echo "$file" | awk -F'-' '{print $1"-"$2"-mainnet.json"}')
            mv "$file" "$new_name"
          done
          cd -
          cd ./apps/watcher/src-tauri/.bin/tmp
          chmod +x ./watcher-service* && mv ./watcher-service* ../watcher-service-$(rustc -Vv | grep host | cut -f2 -d' ')
          unzip *
          yaml2json --pretty --save */config/default.yaml
          mv */config/default.json ../../config
          cd ..
          rm -rf ./tmp

      - name: Build Application
        run: |
          cd apps/watcher/
          npm run tauri build

      - name: Upload File to Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./apps/watcher/src-tauri/target/release/bundle/deb/watcher-app*
            ./apps/watcher/src-tauri/target/release/bundle/appimage/watcher-app*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
