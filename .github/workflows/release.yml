name: RELEASE DESKTOP APPs

on:
  release:
    types:
      - 'published'

jobs:
  download:
    name: Downloading Contracts and Service
    runs-on: ubuntu-latest

    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install yaml2json
        run: npm install -g yamljs
      
      - name: Download Contracts Files
        run: |
          download_version=$(curl -s https://api.github.com/repos/rosen-bridge/contract/releases | jq -r 'max_by(.published_at).name')
          release_info=$(curl -s "https://api.github.com/repos/rosen-bridge/contract/releases/tags/$download_version")
          asset_urls=$(echo "$release_info" | jq -r --arg name "${{ secrets.RELEASE_NAME }}" '.assets | map(select(.name | test($name))) | .[].browser_download_url')
          for url in $asset_urls; do
            curl -LJO "$url"
          done
          mv ./tokensMap-${{ secrets.RELEASE_NAME }}-$download_version.json ./tokens.json
          files=$(ls contracts-*-${{ secrets.RELEASE_NAME }}-$download_version.json)
          for file in $files; do
            new_name=$(echo "$file" | awk -F'-' '{print $1"-"$2"-mainnet.json"}')
            mv "$file" "$new_name"
          done

      - name: Download Watcher Files
        run: |
          mkdir tmp && cd ./tmp
          curl -s https://api.github.com/repos/rosen-bridge/watcher/releases/latest | grep -E '"(browser_download_url|zipball_url)"' | cut -d '"' -f 4 | while read -r url; do wget "$url"; done
          mv watcher* ../
          unzip *
          yaml2json --pretty --save */config/default.yaml
          mv */config/default.json ../
          cd ..
          rm -rf ./tmp

      - name: Dist Packages Output Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ./*
          retention-days: 1

  build:
    name: Build Watcher UI
    needs: download
    permissions: write-all
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [18.x]
        include:
          - os: macos-latest
            platform: macOS
          - os: ubuntu-latest
            platform: linux
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Current Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: install Dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Front Dependencies
        run: |
          npm ci
          npm run build --workspace packages/constants    
          npm run build --workspace packages/types    
          npm run build --workspace packages/utils    
          npm run build --workspace packages --if-present

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: tmp

      - name: Move Config Files
        run: |
          mkdir -p ./apps/watcher/src-tauri/config/rosen/
          mv ./tmp/{contracts,tokens}* ./apps/watcher/src-tauri/config/rosen/
          mv ./tmp/default* ./apps/watcher/src-tauri/config
      
      - name: Move Service File
        run: |
          mkdir -p ./apps/watcher/src-tauri/.bin 
          chmod +x ./tmp/watcher-service*
          mv ./tmp/watcher-service-*-${{ matrix.platform }} ./apps/watcher/src-tauri/.bin/watcher-service-$(rustc -Vv | grep host | cut -f2 -d' ')

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "apps/watcher/"

      - name: Rename the Linux Release File
        if: matrix.platform == 'linux'
        run: mv ./apps/watcher/src-tauri/target/release/bundle/appimage/watcher-app* watcher-service-Linux-${{ github.event.release.tag_name }}
        
      - name: Rename the MacOS Release File
        if: matrix.platform == 'macOS'
        run: mv ./apps/watcher/src-tauri/target/release/bundle/dmg/watcher-app* watcher-service-MacOS-${{ github.event.release.tag_name }}
        
      - name: Upload File to Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            watcher-service-linux-${{ github.event.release.tag_name }}
            ./apps/watcher/src-tauri/target/release/bundle/dmg/watcher-app*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
